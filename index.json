{
  "index.html": {
    "href": "index.html",
    "title": "PLATEAU SDK for Unreal | PLATEAU SDK for Unreal",
    "keywords": "PLATEAU SDK for Unreal このパッケージには、 PLATEAU の3D都市モデルデータを利用するためのAPI、サンプルが含まれます。PLATEAU SDK for Unrealを利用することで、実世界を舞台にしたゲームの開発や、PLATEAUの豊富なデータを活用したシミュレーションを簡単に行うことができます。"
  },
  "manual/AccessCityObject.html": {
    "href": "manual/AccessCityObject.html",
    "title": "都市情報へのアクセス | PLATEAU SDK for Unreal",
    "keywords": "都市情報へのアクセス C#プログラムによって都市情報にアクセスする手順は、おおまかには次のとおりです。 GameObject から CityObject を取得 CityObject から 属性(AttributesMap) を取得 属性から値を取得 以下で詳しく解説します。 まずサンプルを提示し、次に都市情報を取得するために知っておくべきことを解説します。 サンプル シーンに配置された都市の3Dモデルから、都市情報の1つである属性を取得できます。 そのサンプルとして、 PlateauLogAttributes シーンをご覧ください。 シーンを開いてPlayボタンを押すと、建物の情報がUnityコンソールに表示されます。 そのコードのサンプルが PlateauAttributesLogger.cs になります。 属性とは 取得できる都市情報の1つに「属性」があります。 属性は例えば (String) 大字・町コード => 42, (String) 防火及び準防火地域 => 準防火地域 のように、キーと値のペアからなる辞書形式の情報です。 属性の値は文字列型として取得できるか、または 子の属性（属性は入れ子になることもあります）として取得できるかのいずれかです。 属性が入れ子になっている例は次のとおりです（サンプルシーンの実行結果から抜粋）。 (AttributeSet) 多摩水系多摩川、浅川、大栗川洪水浸水想定区域（想定最大規模） => [ { (String) 浸水ランク => 2 } { (Measure) 浸水深 => 0.990 } { (Measure) 継続時間 => 0.68 } { (String) 規模 => L2 } ]} 上の例において、(括弧)内の文字は属性の型を示します。 属性は次の型があります: AttributeSet, String, Double, Integer, Data, Uri, Measure AttributeSet以外の型はすべて内部的には文字列型であり、 attributeValue.AsString で値を取得できます。 入れ子AttributeSetの値は AsString では取得できず、 attributeValue.AsAttrSet で取得できます。 属性の取得 シーンの GameObject から都市情報の属性を取得する方法については サンプルの PlateauAttributesLogger.cs が例になります。 その補足として、方法の概要を以下に記します。 シーンのヒエラルキー PlateauデータをUnityにインポートすると、 サンプルシーンにあるとおり、次の階層構造でオブジェクトが配置されます。 都市モデルルート( CityBehaviour がアタッチされます ) → 子 : 3Dモデルファイルのインスタンス ( プレハブとして配置されます ) → 子 : CityObject に対応する GameObject すなわち、 CityBehaviour の孫にあたる GameObject が CityObject と対応します。 CityObject の取得 GameObject の名称から CityObject を取得するには次のようにします。 var cityObj = cityBehaviour.LoadCityObject(gameObj.name); そうすると CityBehaviour は自身の参照するメタデータを利用し、 GameObjectの名称からどの gml ファイルをロードするべきか検索します。 そして gmlファイルから CityModel ロードして（ロード済みの場合はキャッシュが使われます）、 CityModel のうち 該当する CityObject を返します。 補足: ここで利用するメタデータとは、 インポート時に生成される CityMetaData型の Scriptable Object です。 CityMetaDataは、インポート時に GameObject名と gmlファイル名の対応表を記録します。 CityObject の属性の取得 CityObject から属性を取得するには、 cityObject.AttributesMap を利用します。 属性については上述の通りです。"
  },
  "manual/ImportCityModels.html": {
    "href": "manual/ImportCityModels.html",
    "title": "都市モデルのインポート | PLATEAU SDK for Unreal",
    "keywords": "都市モデルのインポート このページでは、都市データをUnityプロジェクトにインポートする手順を説明します。 準備 PlateauSDK を導入したUnityプロジェクトを用意します。 SDKの導入方法は インストール を参照してください。 インポート手順 インポート元の選択 Unityのメニューバーから PLATEAU → PLATEAU SDK を選択します。 表示されるウィンドウの上部に3つのタブ「インポート、モデル調整、エクスポート」があります。 このうちインポートを選択します。 インポート先がローカルかサーバーかを選択します。 導入したい都市データが自分のコンピュータにある場合はローカルを選択します。 なお、都市データは国交省のPLATEAU Webサイトからダウンロードできます。 参照 ボタンを押します。都市データのフォルダの選択画面が表示されます。 都市データのフォルダの中には、 udx , codelists という名前のフォルダがあるはずです。 udx の 1つ上 のフォルダを選択します。 サーバー では、ローカルの代わりにPLATEAUのデータサーバーから都市データをインポートできます。 この機能は未実装です。 基準座標系の選択 リストのうち、都市が属する場所として近いものを選択します。 適切なものを選ぶと座標の誤差が小さくなります。 ここで選択する座標系は国土交通省が定める平面直角座標系に準拠しています。 詳しくは 国土地理院のWebサイト「わかりやすい平面直角座標系」 をご覧ください。 インポート範囲の選択 範囲選択 ボタンを押します。 利用可能な範囲の一覧が緑色の線で表示されます。 地図の全体像がうまく表示されない場合は次の操作を試してください: マウスホイールを上下に回してズームアウト、ズームイン マウスホイールを押し込んだままドラッグしてカメラ移動 右マウスボタンを押したままドラッグで向き変更 青色の球体をドラッグして範囲を選択します。 シーンビュー左上の 決定 ボタンを押します。 補足 : 地域の区分を確認したい時は、ローカルにダウンロードしたフォルダに付属している indexmap という名前のpdfファイルをご覧ください。 下図のように地図上に区分が記載されています。 地物別設定 地物の種類ごとにインポートに関する設定を行います。 設定項目について: インポートする チェックが付いている地物タイプのみインポートします。 Mesh Collider をセットする チェックが付いている場合、各モデルの Collider が有効になります。 テクスチャを含める テクスチャが存在する地物タイプで表示される設定項目です。 チェックが付いていて、かつテクスチャがある場合はそれを含めてインポートします。 都市データによってはテクスチャがない場合があり、 その場合はチェックを外した時と同様に真っ白な3Dモデルが出力されます。 LOD描画設定 複数のLODを利用可能な地物タイプで表示される設定項目です。 バーの左端と右端をドラッグして、インポートするLODの範囲を指定できます。 Note LODとは gmlファイルの中には、都市モデルの形状の細かさを指定したいという需要に対応するため、 複数の形状データが格納されている場合があります。 LOD0がもっとも大雑把な形状で、LOD1, LOD2 と数字が上がるほど細かい形状になります。 建築物の場合、LOD0 は平面、LOD1は平面に一定の高さを付けたもの、LOD2はより細かい形状です。 モデル結合 主要地物単位（建築物,道路等） モデルのメッシュは建物ごとに結合されて出力されます。 建物ごとに地物データを取得できるようにしたい場合はこちらを選択します。 最小地物単位（壁面,屋根面等） 屋根、壁単位など非常に細かくオブジェクトを分けたい場合はこちらを選択します。 地域単位 モデルのメッシュは結合されて出力されます。 オブジェクト数を削減して軽量化できますが、建物ごとの地物データは取得不可になります。 メッシュの結合はある程度の大きさの範囲ごとに行われます。 Note 地物の選択について 地物の中にはインポートに時間がかかるものもあるのでご注意ください。 例えば 土地起伏 はデータの範囲が 10km × 10km と非常に広く、 データ容量が重く処理に時間がかかるのでご注意ください。 インポートの実行 モデルをインポート ボタンを押します。 処理が進むと、都市のオブジェクトが順次シーンに配置されていきます。 進捗表示がすべて「完了」になったらインポート終了です。"
  },
  "manual/Installation.html": {
    "href": "manual/Installation.html",
    "title": "インストール | PLATEAU SDK for Unreal",
    "keywords": "インストール 対応Unrealバージョンのインストール PLATEAU UE SDK は、Unrealバージョン 4.27 を想定しています。 そのバージョンがインストールされていない場合は、次の手順でインストールしてください。 Epic Games Launcher をこちらからインストールします 。 Epic Games Launcherを起動し、左のサイドバーから Unreal Engine → 上のメニューから ライブラリ をクリックします。 Engineバージョン の隣のプラスボタンをクリックしてバージョンを追加し、数字を選択して4.27 で始まるバージョンを選択し、 インストール を押します。 Unrealプロジェクトの作成 先ほどインストールしたバージョンを起動します。 新規プロジェクトの欄から ゲーム を選択し、 次へ を押します。 テンプレート選択で blank を選択し、 次へ を押します。 プロジェクト名と保存先を入力し プロジェクト作成 を押します。 PLATEAU UE SDK の導入 PLATEAU UE SDK をこちらからダウンロードします 。 作成したプロジェクトのフォルダに Plugins という名前のフォルダを作成し、先程ダウンロードしたSDKをコピーします。 プロジェクトを開く際に以下の画面が表示されるので はい を押して完了です。"
  },
  "manual/Tutorial.html": {
    "href": "manual/Tutorial.html",
    "title": "チュートリアル | PLATEAU SDK for Unreal",
    "keywords": "チュートリアル"
  }
}